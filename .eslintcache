[{"D:\\poapper\\backend_seminar\\final_project\\src\\reportWebVitals.js":"1","D:\\poapper\\backend_seminar\\final_project\\src\\index.js":"2","D:\\poapper\\backend_seminar\\final_project\\src\\Routes.js":"3","D:\\poapper\\backend_seminar\\final_project\\src\\wordCards.js":"4","D:\\poapper\\backend_seminar\\final_project\\src\\imageCards.js":"5"},{"size":362,"mtime":1609340479061,"results":"6","hashOfConfig":"7"},{"size":466,"mtime":1609900471607,"results":"8","hashOfConfig":"7"},{"size":616,"mtime":1609900312355,"results":"9","hashOfConfig":"7"},{"size":5702,"mtime":1609936236916,"results":"10","hashOfConfig":"7"},{"size":6062,"mtime":1609936193404,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sknl6y",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\poapper\\backend_seminar\\final_project\\src\\reportWebVitals.js",[],"D:\\poapper\\backend_seminar\\final_project\\src\\index.js",[],"D:\\poapper\\backend_seminar\\final_project\\src\\Routes.js",[],"D:\\poapper\\backend_seminar\\final_project\\src\\wordCards.js",["23"],"import React, { Component } from 'react';\nimport './cards.css';\n\n\nclass wordCards extends Component {\n  // state 초기값 설정\n  constructor(){\n    super();\n    this.state={\n      cards:[],\n      level:1,\n      num:0,\n      cardsCount:[]\n    }\n}\n\n  updateValue(){\n    if(this.state.cards.length&&this.state.num<this.state.cards.length){\n      document.querySelector('.study .words').innerHTML=`학습할 단어 :${this.state.cards[this.state.num].words}`;\n      document.querySelector('.study .check').style.display='flex';\n      document.getElementById('answerButton').style.display='flex';\n      document.getElementById('answerMeaning').innerHTML='';\n    }\n    else{\n      document.querySelector('.study .words').innerHTML=`단어가 없습니다.`;\n      document.querySelector('.study .check').style.display='none';\n      document.getElementById('answerButton').style.display='none';\n      document.getElementById('answerMeaning').innerHTML='';\n    }\n  }\n\n  componentDidMount() {\n      var url='http://localhost:8080/words/'+this.state.level;\n      fetch(url)\n      .then(res => res.json())\n      .then(cards => this.setState({cards}));\n      fetch('http://localhost:8080/words')\n      .then(res=>res.json())\n      .then(cardsCount=>this.setState({cardsCount}));\n      this.setState({currentMeaning:'정답 확인하기'});\n      this.updateValue();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if(this.state.level!==prevState.level){\n      var url='http://localhost:8080/words/'+this.state.level;\n      fetch(url)\n      .then(res => res.json())\n      .then(cards => this.setState({cards}));\n      fetch('http://localhost:8080/words')\n      .then(res=>res.json())\n      .then(cardsCount=>this.setState({cardsCount}));\n      this.setState({num:0});\n    }\n    this.updateValue();\n  }\n\n\n  handleSubmit=(e)=>{\n   e.preventDefault();\n   fetch('http://localhost:8080/words',{\n        method:'POST',\n        headers:{\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify({\n          words:e.target.words.value,\n          meaning:e.target.meaning.value\n        })\n    })\n    .then(res=>res.json())\n    .then(window.location.href='http://localhost:3000/wordCards');\n  }\n  changeLevel=(i,e)=>{\n    e.preventDefault();\n    this.setState({level:i});\n  }\n  \n  changeCard=(suc,e)=>{\n    if(this.state.num===this.state.cards.length){\n      return;\n    }\n    if(this.state.num<this.state.cards.length)\n    {\n      this.setState({num:this.state.num+1});\n    }\n    else{\n      document.querySelector('.study .words').innerHTML='칸에 단어가 더 이상 없습니다. 다른 칸을 선택하세요.';\n      document.querySelector('.study .answer').style.display='none';\n    }\n    fetch('http://localhost:8080/words/update',{\n      method:'PUT',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body:JSON.stringify({\n        id:this.state.cards[this.state.num].id,\n        level:this.state.cards[this.state.num].level,\n        success:suc\n      })\n    });\n    var newCount=this.state.cardsCount;\n    var level=this.state.cards[this.state.num].level;\n    newCount[level-1]-=1;\n    if(suc===\"success\"){\n      if(level!=5){\n        newCount[level]+=1;\n      }\n    }\n    else{\n      newCount[0]+=1;\n    }\n    this.setState({cardsCount:newCount});\n  }\n\n  showAnswer=(e)=>{\n    document.getElementById('answerButton').style.display='none';\n    document.getElementById('answerMeaning').innerHTML=this.state.cards[this.state.num].meaning;\n  }\n\n  showForm=(e)=>{\n    document.getElementById('showForm').style.display='none';\n    document.querySelector('form').style.display='flex';\n  }\n\n\n  render() {\n    return (\n      <div className=\"wordCards\">\n        <a href=\"./imageCards\"> Go to imageCards </a>\n        <h1>Words</h1>\n        <div className=\"study\">\n          <div className=\"level\">\n            <h3>학습할 칸을 선택하세요 </h3>\n            <div className=\"levelButton\">\n              <button onClick={this.changeLevel.bind(this,1)}> 1 </button>\n              <button onClick={this.changeLevel.bind(this,2)}> 2 </button>\n              <button onClick={this.changeLevel.bind(this,3)}> 3 </button>\n              <button onClick={this.changeLevel.bind(this,4)}> 4 </button>\n              <button onClick={this.changeLevel.bind(this,5)}> 5 </button>\n            </div>\n            <h3> 현재 학습 칸 : {this.state.level} </h3>\n          </div>\n          <div className=\"count\">\n            [1] {this.state.cardsCount[0]} / 10 <br/> \n            [2] {this.state.cardsCount[1]} / 20 <br/> \n            [3] {this.state.cardsCount[2]} / 30 <br/> \n            [4] {this.state.cardsCount[3]} / 40 <br/> \n            [5] {this.state.cardsCount[4]} / 50 <br/> \n          </div>\n          <div className=\"words\" id=\"id_words\">\n\n          </div>\n          <div className=\"answer\">\n            <button id=\"answerButton\" onClick={this.showAnswer}> 정답 확인하기</button>\n            <div id=\"answerMeaning\"> \n\n            </div>\n          </div>\n          <div className=\"check\">\n            <button id=\"success\" onClick={this.changeCard.bind(this,\"success\")}> 성공</button>\n            <button id=\"fail\" onClick={this.changeCard.bind(this,\"fail\")}> 실패</button>\n          </div>\n        </div>\n        <div className=\"submitForm\">\n          <button id=\"showForm\" onClick={this.showForm}> 새 단어 추가하기 </button>\n          <form onSubmit={this.handleSubmit}>\n            <input type=\"text\" name=\"words\" placeholder=\"Words\" />\n            <input type=\"text\" name=\"meaning\" placeholder=\"Meaning\"/>\n            <input type=\"submit\" value=\"Submit\"/>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default wordCards;\n\n","D:\\poapper\\backend_seminar\\final_project\\src\\imageCards.js",[],{"ruleId":"24","severity":1,"message":"25","line":106,"column":15,"nodeType":"26","messageId":"27","endLine":106,"endColumn":17},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]